name: Build and Deploy Services

on:
  push:
    paths:
      - 'server/**'
      - 'stay_on_track/**'
    branches:
      - main  # ruleazÄƒ la push pe main
     
env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_WEB: ${{ secrets.DOCKER_USER }}/stay_on_track_web
  IMAGE_API: ${{ secrets.DOCKER_USER }}/stay_on_track_api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

      - name: Build web image
        run: docker build -t $IMAGE_WEB:latest ./stay_on_track

      - name: Build api image
        run: docker build -t $IMAGE_API:latest ./server

      - name: Push web image
        run: docker push $IMAGE_WEB:latest

      - name: Push api image
        run: docker push $IMAGE_API:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            export CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} 
            export CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} 

            docker pull $IMAGE_WEB:latest
            docker pull $IMAGE_API:latest
            docker-compose -f docker-compose.staging.yml down
            docker-compose -f docker-compose.staging.yml up -d
